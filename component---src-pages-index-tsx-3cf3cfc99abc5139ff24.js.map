{"version":3,"file":"component---src-pages-index-tsx-3cf3cfc99abc5139ff24.js","mappings":"mIA2CA,IAvCmD,SAAC,GAAe,IAAbA,EAAY,EAAZA,MACpD,OACEC,EAAAA,cAAAA,EAAAA,SAAAA,KACGD,aADH,EACGA,EAAOE,KACN,oBACEC,KACEC,EAFJ,EAEIA,GACAC,EAHJ,EAGIA,QACUC,EAJd,EAIIC,OAAUD,KAJd,IAKIE,YAAeC,EALnB,EAKmBA,MAAOC,EAL1B,EAK0BA,KAAMC,EALhC,EAKgCA,OAAQC,EALxC,EAKwCA,KALxC,OAQEX,EAAAA,cAAAA,UAAAA,CACEY,IAAKT,EACLU,UAAU,iEAEVb,EAAAA,cAACc,EAAAA,KAAD,CAAMC,GAAIV,GACRL,EAAAA,cAAAA,KAAAA,CAAIa,UAAU,qBAAqBL,GACnCR,EAAAA,cAAAA,MAAAA,CAAKa,UAAU,oCACbb,EAAAA,cAAAA,MAAAA,KACEA,EAAAA,cAAAA,OAAAA,CAAMY,IAAKT,GAAKM,GACfC,GAAUV,EAAAA,cAAAA,OAAAA,KAAAA,cAAqBU,EAArB,MAEbV,EAAAA,cAAAA,MAAAA,CAAKa,UAAU,6BACZF,GACCA,EAAKV,KAAI,SAACe,EAAKC,GAAN,OACPjB,EAAAA,cAAAA,OAAAA,CAAMa,UAAU,OAAOD,IAAKK,GAA5B,IAAwCD,QAIhDhB,EAAAA,cAAAA,MAAAA,CAAKa,UAAU,8BAA8BT,W,8DCf3D,UAZiD,SAAC,GAI3C,IAFkBL,EAEnB,EAHJmB,KACEC,kBAAqBpB,MAGvB,OACEC,EAAAA,cAAAA,EAAAA,SAAAA,KACEA,EAAAA,cAACoB,EAAAA,EAAD,MACApB,EAAAA,cAACqB,EAAAA,EAAD,CAAUtB,MAAOA","sources":["webpack://kumas.dev/./src/components/PostList.tsx","webpack://kumas.dev/./src/pages/index.tsx"],"sourcesContent":["import { Link } from 'gatsby'\nimport React, { FunctionComponent } from 'react'\nimport { PostListProps } from 'types'\n\nconst PostList: FunctionComponent<PostListProps> = ({ edges }) => {\n  return (\n    <>\n      {edges?.map(\n        ({\n          node: {\n            id,\n            excerpt,\n            fields: { slug },\n            frontmatter: { title, date, update, tags },\n          },\n        }) => (\n          <article\n            key={id}\n            className=\"mb-8 p-4 hover:opacity-100 transition duration-500 opacity-80\"\n          >\n            <Link to={slug}>\n              <h2 className=\"text-xl font-bold\">{title}</h2>\n              <div className=\"flex text-xs text-gray-500 my-2 \">\n                <div>\n                  <span key={id}>{date}</span>\n                  {update && <span>{` (Updated: ${update})`}</span>}\n                </div>\n                <div className=\"before:content-['Â·'] mx-1\">\n                  {tags &&\n                    tags.map((tag, index) => (\n                      <span className=\"mx-1\" key={index}>{`#${tag}`}</span>\n                    ))}\n                </div>\n              </div>\n              <div className=\"text-gray-700 line-clamp-3\">{excerpt}</div>\n            </Link>\n          </article>\n        ),\n      )}\n    </>\n  )\n}\n\nexport default PostList\n","import React, { FunctionComponent } from 'react'\nimport { graphql } from 'gatsby'\n\nimport Head from 'components/Head'\nimport PostList from 'components/PostList'\nimport { IndexProps } from 'types'\n\nconst IndexPage: FunctionComponent<IndexProps> = ({\n  data: {\n    allMarkdownRemark: { edges },\n  },\n}) => {\n  return (\n    <>\n      <Head />\n      <PostList edges={edges} />\n    </>\n  )\n}\nexport default IndexPage\n\nexport const indexQuery = graphql`\n  query {\n    allMarkdownRemark(\n      sort: { order: DESC, fields: [frontmatter___date, frontmatter___title] }\n      filter: { fields: { slug: { regex: \"/^/[a-zA-Z]/\" } } }\n    ) {\n      edges {\n        node {\n          id\n          excerpt(pruneLength: 200, truncate: true)\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n            date(formatString: \"DD MMMM, YYYY\")\n            update(formatString: \"DD MMMM, YYYY\")\n            tags\n          }\n        }\n      }\n    }\n  }\n`\n"],"names":["edges","React","map","node","id","excerpt","slug","fields","frontmatter","title","date","update","tags","key","className","Link","to","tag","index","data","allMarkdownRemark","Head","PostList"],"sourceRoot":""}