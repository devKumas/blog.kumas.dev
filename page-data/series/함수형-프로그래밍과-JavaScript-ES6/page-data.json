{"componentChunkName":"component---src-templates-series-jsx","path":"/series/함수형-프로그래밍과-JavaScript-ES6","result":{"data":{"posts":{"nodes":[{"excerpt":"다형성(polymorphism)이란? 프로그램 언어의 다형성은 그 프로그래밍 언어의 자료형 체계의 성질을 나타내는 것으로, 프로그램 언어의 각 요소들(상수, 변수, 식, 오브젝트, 함수, 메서드 등)이 다양한 자료형(type)에 속하는 것이 허가되는 성질을 가리킨다. 반대말은 단형성으로, 프로그램 언어의 각 요소가 한 가지 형태만 가지는 성질을 가리킨다.…","fields":{"slug":"/js/functional-programming/iterator-function/"},"frontmatter":{"date":"September 26, 2021","update":null,"title":"✨️ 이터레이터를 이용한 높은 다형성을 가진 함수","tags":["javascript","functional"]}},{"excerpt":"지연 평가란? 컴퓨터 프로그래밍에서 느긋한 계산법(Lazy evaluation)은 계산의 결과 값이 필요할 때까지 계산을 늦추는 기법이다.  지연 평가를 이용하면, 불필요한 계산을 하지 않게 되어 성능상의 이점이 있으며, 무한의 자료구조를 사용할 수 있습니다. ES6에서 추가된 이터레이터와 제너레이터를 이용하여 지연 평가되는 함수를 작성해 보겠습니다. 배…","fields":{"slug":"/js/functional-programming/generator-lazy-function/"},"frontmatter":{"date":"October 05, 2021","update":null,"title":"👀 제너레이터를 이용하여 함수의 지연평가","tags":["javascript","functional"]}},{"excerpt":"비동기 상황이란? 비동기는 동시에 일어나지 않는다를 의미합니다. 따라서 요청한 결과가 동시에 일어나지 않는다는 것입니다. 이전에 작성한 함수들을 비동기 상황에서도 잘 작동할 수 있도록 수정해 보겠습니다. 비동기 작업을 처리하는 go1 기존의 작성하였던 go함수에 비동기 상황이 발생하도록 코드를 만들어 보겠습니다. 중간의 비동기 상황이 발생 시에 의도하지 …","fields":{"slug":"/js/functional-programming/async-function/"},"frontmatter":{"date":"November 08, 2021","update":null,"title":"🙆 비동기 상황에서 잘 작동하는 함수","tags":["javascript","functional"]}},{"excerpt":"지연된 함수열을 병렬적으로 평가하기 자바스크립트는 비동기 IO 동작을 합니다. 이는 하나의 쓰레드에서 IO작업을 효율적으로 처리할 수 있도록 하기 위함입니다. 하지만 데이터베이스 같은 외부에 IO 작업을 요청하는 경우에는 그저 명령을 전달 후 완료 시점을 대기하는 상황이기 때문에 자바스크립트에서도 병렬적인 작업이 필요합니다. 지연된 함수의 평가 명령을 요…","fields":{"slug":"/js/functional-programming/concurrency-function/"},"frontmatter":{"date":"November 22, 2021","update":null,"title":"✨ 지연된 평가를 병렬적으로 평가하기","tags":["javascript","functional"]}}]}},"pageContext":{"series":"함수형 프로그래밍과 JavaScript ES6"}},"staticQueryHashes":[]}