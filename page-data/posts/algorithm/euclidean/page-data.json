{"componentChunkName":"component---src-templates-post-template-tsx","path":"/posts/algorithm/euclidean/","result":{"data":{"posts":{"edges":[{"node":{"id":"7d48a25c-380a-5414-8bac-5567931bddcf","html":"<h2>유클리드 호제법이란?</h2>\n<p>유클리드 호제법이란 <code>2개의 자연수로 최대공약수</code>를 구하는 알고리즘입니다. 호제법이란 말은 두 수가 서로 상대방의 수를 나누어 결국 원하는 수를 얻는 알고리즘을 말합니다.</p>\n<h3>최대공약수</h3>\n<p>2개의 자연수 a, b에 대하여 a를 b로 나눈 나머지를 r이라고 하면(단, a > b) a와 b의 최대공약수는 b와 r의 최대공약수와 같습니다. 이 성질에 따라, b를 r로 나눈 나머지 r’를 구하고, 다시 r을 r’로 나눈 나머지를 구하는 과정을 반복하여 나머지가 0이 되었을 때 나누는 수가 a와 b의 최대공약수입니다.</p>\n<deckgo-highlight-code language=\"jsx\" terminal=\"carbon\" theme=\"seti\"  >\n          <code slot=\"code\">function gcd(min, max) {\n  return min % max ? gcd(max, min % max) : max;\n}</code>\n        </deckgo-highlight-code>\n<h3>최소공배수</h3>\n<p>유클리드 호제법으로 구한 최대공약수를 이용한다면 최소공배수도 쉽게 구할 수 있습니다.</p>\n<deckgo-highlight-code language=\"jsx\" terminal=\"carbon\" theme=\"seti\"  >\n          <code slot=\"code\">function lcm(min, max) {\n  return (min * max) / gcd(min, max);\n}</code>\n        </deckgo-highlight-code>\n<h2>참고</h2>\n<ul>\n<li><a href=\"https://ko.wikipedia.org/wiki/%EC%9C%A0%ED%81%B4%EB%A6%AC%EB%93%9C_%ED%98%B8%EC%A0%9C%EB%B2%95\" target=\"_blank\" rel=\"nofollow\">위키백과</a></li>\n</ul>","timeToRead":1,"frontmatter":{"title":"🧠 유클리드 호제법","date":"Nov 22, 2021","update":null,"tags":["algorithm"]}}}]}},"pageContext":{"slug":"/posts/algorithm/euclidean/"}},"staticQueryHashes":["196858978","3066419403","3159585216"]}