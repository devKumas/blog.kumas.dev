{"componentChunkName":"component---src-templates-post-template-tsx","path":"/posts/web/http-status-code/","result":{"data":{"allMarkdownRemark":{"edges":[{"node":{"id":"5655af8e-c2f2-5a7e-a4d7-872a28028473","html":"<h1></h1>\n<h2>개요</h2>\n<p>HTTP 에는 다양한 상태코드가 있습니다. 상태코드별로 어떠한 의미를 가지고 있는지 확인 해보도록 하겠습니다.</p>\n<h3>http 상태코드</h3>\n<ul>\n<li>1xx (Informational): 요청이 수신되어 처리중</li>\n<li>2xx (Successful): 요청 정상 처리</li>\n<li>3xx (Redirection): 요청을 완료하려면 추가 행동이 필요</li>\n<li>4xx (Client Error): 클라이언트 오류, 잘못된 문법등으로 서버가 요청을 수행할 수 없음</li>\n<li>5xx (Server Error): 서버 오류, 서버가 정상 요청을 처리하지 못함</li>\n</ul>\n<h3>1xx (Informational)</h3>\n<p>🏃 요청이 수신되어 처리중</p>\n<ul>\n<li>거의 사용되지 않음</li>\n</ul>\n<h3>2xx (Successful)</h3>\n<p>🙆 클라이언트의 요청을 성공적으로 처리</p>\n<ul>\n<li>200 OK\n<ul>\n<li>요청 성공</li>\n<li>주로 리소스를 조회 하는 GET 요청의 응답코드로 사용</li>\n</ul>\n</li>\n<li>201 Created\n<ul>\n<li>요청 성공하여 새로운 리소스가 생성됨</li>\n<li>주로 리소스를 생성 하는 POST 요청의 응답코드로 사용</li>\n</ul>\n</li>\n<li>202 Accepted\n<ul>\n<li>요청이 접수되었으나 처리가 완료되지 않음</li>\n<li>배치 처리 같은 곳에서 사용</li>\n</ul>\n</li>\n<li>204 No Content\n<ul>\n<li>서버가 요청을 성공적으로 수행했지만, 응답 페이로드 본문에 보낼 데이터가 없음</li>\n<li>응답 결과가 필요없는 곳에서 사용</li>\n</ul>\n</li>\n</ul>\n<h3>3xx (Redirection)</h3>\n<p>🔨 요청을 완료하기 위해 유저 에이전트의 추가 조치 필요</p>\n<ul>\n<li>300 Multiple Choices\n<ul>\n<li>거의 사용되지 않음</li>\n</ul>\n</li>\n<li>301 Moved Permanently\n<ul>\n<li>리소스의 URI가 영구적으로 이동</li>\n<li>원래의 URL를 사용하지 않으며, 검색 엔진에서도 변경을 인지</li>\n<li>리다이렉트시 요청 메서드가 GET으로 변경되고, 본문이 제거될 수 있음</li>\n</ul>\n</li>\n<li>302 Found\n<ul>\n<li>리소스의 URI가 일시적으로 이동</li>\n<li>리다이렉트시 요청 메서드가 GET으로 변하고, 본문이 제거될 수 있음</li>\n</ul>\n</li>\n<li>303 See Other\n<ul>\n<li>302 Found와 기능이 같음</li>\n<li>리다이렉트시 요청메서드가 GET으로 반드시 변경됨</li>\n</ul>\n</li>\n<li>304 Not Modified\n<ul>\n<li>캐시를 목적으로 사용</li>\n<li>클라이언트에게 리소스가 수정되지 않았음을 알려줌</li>\n<li>응답에 메시지 바디를 포함하면 안됨</li>\n<li>주로 GET, HEAD 요청시에 사용</li>\n</ul>\n</li>\n<li>307 Temporary Redirect\n<ul>\n<li>302 Found와 기능이 같음</li>\n<li>리다이렉트시 요청 메서드와 본문을 유지</li>\n</ul>\n</li>\n<li>308 Permanent Redirect\n<ul>\n<li>301 Moved Permanently와 기능이 같음</li>\n<li>리다이렉트시 요청 메서드와 본문을 유지</li>\n</ul>\n</li>\n<li>일시적인 리다이렉트인 302, 307, 303 중에 무엇을 써야 할까?\n<ul>\n<li>초기 302 상태 코드의 스펙 의도는 HTTP의 메서드를 유지하는 것이 였으나, 설명의 모호함으로 인하여 대부분의 브라우저가 GET요청으로 바뀌도록 설계가 되었습니다. 그래서 모호한 302 대신 명확한 307, 303이 등장하였습니다.</li>\n<li>스펙상 307, 303을 권장하지만, 현실적으로 많은 애플리케이션 라이브러리들이 302을 기본값으로 사용하고 있기 때문에 자동 리다이렉션시 GET 요청으로 변경되어도 문제가 없다면 302을 사용하면 됩니다</li>\n</ul>\n</li>\n</ul>\n<h3>4xx (Client Error)</h3>\n<p>❗ 클라이언트 오류</p>\n<ul>\n<li>400 Bad Request\n<ul>\n<li>클라이언트가 잘못된 요청을 해서 서버가 요청을 처리할 수 없음</li>\n</ul>\n</li>\n<li>401 Unauthorized\n<ul>\n<li>인증(Authentication) 되지 않았거나 인가(Authorization)가 필요함</li>\n</ul>\n</li>\n<li>403 Forbidden\n<ul>\n<li>서버가 요청을 이해 했지만 승인을 거부함</li>\n<li>인증 자격 증명은 있지만 접근 권한이 불충분한 경우</li>\n</ul>\n</li>\n<li>404 Not Found\n<ul>\n<li>요청 리소스가 서버에 없음</li>\n<li>클라이언트가 권한이 부족한 리소스에 접근할때 사용하기도 함</li>\n</ul>\n</li>\n</ul>\n<h3>5xx (Server Error)</h3>\n<p>⚡ 서버 오류</p>\n<ul>\n<li>500 Internal Server Error\n<ul>\n<li>서버 내부 문제로 오류 발생</li>\n</ul>\n</li>\n<li>503 Service Unavailable\n<ul>\n<li>서버가 일시적인 과부하 또는 예정된 작업으로 잠시 요청을 처리할 수 없음</li>\n<li>Retry_after 헤더 필드로 얼마뒤에 복구되는지 보낼 수 있음</li>\n</ul>\n</li>\n</ul>\n<h2>참고</h2>\n<ul>\n<li><a href=\"https://www.inflearn.com/course/http-%EC%9B%B9-%EB%84%A4%ED%8A%B8%EC%9B%8C%ED%81%AC\" target=\"_blank\" rel=\"nofollow\">모든 개발자를 위한 HTTP 웹 기본 지식</a></li>\n</ul>","frontmatter":{"title":"HTTP의 상태코드의 종류와 의미","date":"Jan 31, 2022","update":null,"tags":["http"]}}}]},"site":{"siteMetadata":{"comment":{"utterances":"devKumas/kumas.dev"}}}},"pageContext":{"slug":"/posts/web/http-status-code/"}},"staticQueryHashes":["196858978","2544702736","3159585216"]}