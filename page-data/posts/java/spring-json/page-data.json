{"componentChunkName":"component---src-templates-post-template-tsx","path":"/posts/java/spring-json/","result":{"data":{"allMarkdownRemark":{"edges":[{"node":{"id":"70862e59-06f2-5b01-9b3c-fb4aa046c8df","html":"<h2>원인</h2>\n<p>스프링 프레임워크를 사용 시에 json 객채의 경우에는 string 타입으로 변환되어 전달이 되지만 배열 객체의 경우 전달이 되지 않습니다. http 통신은 원래 문자열만 전송할 수 있기 때문에 객체의 배열의 경우 직렬화를 하여 문자열 형태로 보내주어야 합니다.</p>\n<h2>해결 방법</h2>\n<h3>ajax</h3>\n<p>jquery을 이용하여 ajax로 객채 배열을 직렬화 시켜 String 타입으로 서버 측으로 전송합니다.</p>\n<deckgo-highlight-code language=\"jsx\" terminal=\"carbon\" theme=\"seti\"  >\n          <code slot=\"code\">let person = [\n  { name: &#39;James&#39;, age: 25, skill: &#39;HTML&#39; },\n  { name: &#39;John&#39;, age: 22, skill: &#39;CSS&#39; },\n  { name: &#39;Robert&#39;, age: 21, skill: &#39;JavaScript&#39; },\n]\nlet jsonData = JSON.stringify(person) // JSON 타입으로 데이터 직렬화\n//&quot;[{\\\\&quot;name\\\\&quot;:\\\\&quot;James\\\\&quot;,\\\\&quot;age\\\\&quot;:25,\\\\&quot;skill\\\\&quot;:\\\\&quot;HTML\\\\&quot;}, ...]&quot;\n\n$.ajax({\n  url: &#39;getJson.do&#39;,\n  type: &#39;POST&#39;,\n  data: { jsonData: jsonData },\n  dataType: &#39;json&#39;,\n  success: function () {\n    //\n  },\n  error: function () {\n    //\n  },\n})</code>\n        </deckgo-highlight-code>\n<h3>spring</h3>\n<p>전달된 String 타입의 문자열을 JSON 라이브러리를 이용하여 다시 JSON 타입으로 변환시켜 객체에 다시 세팅합니다.</p>\n<deckgo-highlight-code language=\"java\" terminal=\"carbon\" theme=\"seti\"  >\n          <code slot=\"code\">import net.sf.json.JSONArray;\nimport net.sf.json.JSONObject;\n\n@RequestMapping(value = &quot;/getJson.do&quot;, method = RequestMethod.POST)\npublic Object getJson(@RequestParam String jsonData) throws Exception {\n  // 직렬화 시켜 가져온 오브젝트 배열을 JSONArray 형식으로 바꿔준다.\n  JSONArray array = JSONArray.fromObject(jsonData);\n\n  List&lt;Person&gt; persons = new ArrayList&lt;Person&gt;();\n  for (int i = 0; i &lt; array.size(); i++) {\n    // JSONArray 형태의 값을 가져와 JSONObject 로 풀어준다.\n    JSONObject obj = (JSONObject) array.get(i);\n\n    Person person = new Person();\n    person.setName((int) obj.get(&quot;name&quot;));\n    person.setAge((int) obj.get(&quot;age&quot;));\n    person.setSkill((String) obj.get(&quot;skill&quot;));\n    persons.add(person);\n  }\n}</code>\n        </deckgo-highlight-code>\n<h3>gradle</h3>\n<deckgo-highlight-code  terminal=\"carbon\" theme=\"seti\"  >\n          <code slot=\"code\">dependencies {\n  implementation &#39;net.sf.json-lib:json-lib:2.4:jdk15&#39;\n}</code>\n        </deckgo-highlight-code>","frontmatter":{"title":"Spring에서 JSON사용하기","date":"Jul 23, 2021","update":null,"tags":["spring","jquery"]}}}]},"site":{"siteMetadata":{"comment":{"utterances":"devKumas/kumas.dev"}}}},"pageContext":{"slug":"/posts/java/spring-json/"}},"staticQueryHashes":["196858978","2544702736","3159585216"]}