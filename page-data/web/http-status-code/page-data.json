{"componentChunkName":"component---src-templates-post-jsx","path":"/web/http-status-code/","result":{"data":{"site":{"siteMetadata":{"title":"kumas.blog"}},"markdownRemark":{"id":"ba4d1746-3dc8-52e4-aba1-ffdf3e02016b","excerpt":"개요 HTTP 에는 다양한 상태코드가 있습니다. 상태코드별로 어떠한 의미를 가지고 있는지 확인 해보도록 하겠습니다. http 상태코드 1xx (Informational): 요청이 수신되어 처리중 2xx (Successful): 요청 정상 처리 3xx (Redirection): 요청을 완료하려면 추가 행동이 필요 4xx (Client Error): 클라이언…","html":"<h1></h1>\n<h2>개요</h2>\n<p>HTTP 에는 다양한 상태코드가 있습니다. 상태코드별로 어떠한 의미를 가지고 있는지 확인 해보도록 하겠습니다.</p>\n<h3>http 상태코드</h3>\n<ul>\n<li>1xx (Informational): 요청이 수신되어 처리중</li>\n<li>2xx (Successful): 요청 정상 처리</li>\n<li>3xx (Redirection): 요청을 완료하려면 추가 행동이 필요</li>\n<li>4xx (Client Error): 클라이언트 오류, 잘못된 문법등으로 서버가 요청을 수행할 수 없음</li>\n<li>5xx (Server Error): 서버 오류, 서버가 정상 요청을 처리하지 못함</li>\n</ul>\n<h3>1xx (Informational)</h3>\n<p>🏃 요청이 수신되어 처리중</p>\n<ul>\n<li>거의 사용되지 않음</li>\n</ul>\n<h3>2xx (Successful)</h3>\n<p>🙆 클라이언트의 요청을 성공적으로 처리</p>\n<ul>\n<li>\n<p>200 OK</p>\n<ul>\n<li>요청 성공</li>\n<li>주로 리소스를 조회 하는 GET 요청의 응답코드로 사용</li>\n</ul>\n</li>\n<li>\n<p>201 Created</p>\n<ul>\n<li>요청 성공하여 새로운 리소스가 생성됨</li>\n<li>주로 리소스를 생성 하는 POST 요청의 응답코드로 사용</li>\n</ul>\n</li>\n<li>\n<p>202 Accepted</p>\n<ul>\n<li>요청이 접수되었으나 처리가 완료되지 않음</li>\n<li>배치 처리 같은 곳에서 사용</li>\n</ul>\n</li>\n<li>\n<p>204 No Content</p>\n<ul>\n<li>서버가 요청을 성공적으로 수행했지만, 응답 페이로드 본문에 보낼 데이터가 없음</li>\n<li>응답 결과가 필요없는 곳에서 사용</li>\n</ul>\n</li>\n</ul>\n<h3>3xx (Redirection)</h3>\n<p>🔨 요청을 완료하기 위해 유저 에이전트의 추가 조치 필요</p>\n<ul>\n<li>\n<p>300 Multiple Choices</p>\n<ul>\n<li>거의 사용되지 않음</li>\n</ul>\n</li>\n<li>\n<p>301 Moved Permanently</p>\n<ul>\n<li>리소스의 URI가 영구적으로 이동</li>\n<li>원래의 URL를 사용하지 않으며, 검색 엔진에서도 변경을 인지</li>\n<li>리다이렉트시 요청 메서드가 GET으로 변경되고, 본문이 제거될 수 있음</li>\n</ul>\n</li>\n<li>\n<p>302 Found</p>\n<ul>\n<li>리소스의 URI가 일시적으로 이동</li>\n<li>리다이렉트시 요청 메서드가 GET으로 변하고, 본문이 제거될 수 있음</li>\n</ul>\n</li>\n<li>\n<p>303 See Other</p>\n<ul>\n<li>302 Found와 기능이 같음</li>\n<li>리다이렉트시 요청메서드가 GET으로 반드시 변경됨</li>\n</ul>\n</li>\n<li>\n<p>304 Not Modified</p>\n<ul>\n<li>캐시를 목적으로 사용</li>\n<li>클라이언트에게 리소스가 수정되지 않았음을 알려줌</li>\n<li>응답에 메시지 바디를 포함하면 안됨</li>\n<li>주로 GET, HEAD 요청시에 사용</li>\n</ul>\n</li>\n<li>\n<p>307 Temporary Redirect</p>\n<ul>\n<li>302 Found와 기능이 같음</li>\n<li>리다이렉트시 요청 메서드와 본문을 유지</li>\n</ul>\n</li>\n<li>\n<p>308 Permanent Redirect</p>\n<ul>\n<li>301 Moved Permanently와 기능이 같음</li>\n<li>리다이렉트시 요청 메서드와 본문을 유지</li>\n</ul>\n</li>\n<li>\n<p>일시적인 리다이렉트인 302, 307, 303 중에 무엇을 써야 할까?</p>\n<ul>\n<li>초기 302 상태 코드의 스펙 의도는 HTTP의 메서드를 유지하는 것이 였으나, 설명의 모호함으로 인하여 대부분의 브라우저가 GET요청으로 바뀌도록 설계가 되었습니다. 그래서 모호한 302 대신 명확한 307, 303이 등장하였습니다.</li>\n<li>스펙상 307, 303을 권장하지만, 현실적으로 많은 애플리케이션 라이브러리들이 302을 기본값으로 사용하고 있기 때문에 자동 리다이렉션시 GET 요청으로 변경되어도 문제가 없다면 302을 사용하면 됩니다</li>\n</ul>\n</li>\n</ul>\n<h3>4xx (Client Error)</h3>\n<p>❗ 클라이언트 오류</p>\n<ul>\n<li>\n<p>400 Bad Request</p>\n<ul>\n<li>클라이언트가 잘못된 요청을 해서 서버가 요청을 처리할 수 없음</li>\n</ul>\n</li>\n<li>\n<p>401 Unauthorized</p>\n<ul>\n<li>인증(Authentication) 되지 않았거나 인가(Authorization)가 필요함</li>\n</ul>\n</li>\n<li>\n<p>403 Forbidden</p>\n<ul>\n<li>서버가 요청을 이해 했지만 승인을 거부함</li>\n<li>인증 자격 증명은 있지만 접근 권한이 불충분한 경우</li>\n</ul>\n</li>\n<li>\n<p>404 Not Found</p>\n<ul>\n<li>요청 리소스가 서버에 없음</li>\n<li>클라이언트가 권한이 부족한 리소스에 접근할때 사용하기도 함</li>\n</ul>\n</li>\n</ul>\n<h3>5xx (Server Error)</h3>\n<p>⚡ 서버 오류</p>\n<ul>\n<li>\n<p>500 Internal Server Error</p>\n<ul>\n<li>서버 내부 문제로 오류 발생</li>\n</ul>\n</li>\n<li>\n<p>503 Service Unavailable</p>\n<ul>\n<li>서버가 일시적인 과부하 또는 예정된 작업으로 잠시 요청을 처리할 수 없음</li>\n<li>Retry_after 헤더 필드로 얼마뒤에 복구되는지 보낼 수 있음</li>\n</ul>\n</li>\n</ul>\n<h2>참고</h2>\n<ul>\n<li><a href=\"https://www.inflearn.com/course/http-%EC%9B%B9-%EB%84%A4%ED%8A%B8%EC%9B%8C%ED%81%AC\">모든 개발자를 위한 HTTP 웹 기본 지식</a></li>\n</ul>","frontmatter":{"title":"🌐️ HTTP의 상태코드의 종류와 의미","date":"January 31, 2022","update":null,"tags":["http"],"series":null},"fields":{"slug":"/web/http-status-code/","readingTime":{"minutes":5.295}}},"seriesList":{"edges":[{"node":{"id":"468e65ec-2387-58da-913a-09474de5c6f6","fields":{"slug":"/devops/tomcat-utf8/"},"frontmatter":{"title":"🐛 Windows Tomcat 배치파일 한글 깨짐"}}},{"node":{"id":"2f1de6a4-eec9-5b04-86fd-35a5c6eb6a66","fields":{"slug":"/devops/linux-mysql57-install/"},"frontmatter":{"title":"✨ Linux MySQL 5.7 설치"}}},{"node":{"id":"c1aac2ba-29f7-5cac-a34f-7b1b1dd889ce","fields":{"slug":"/devops/linux-mssql2019-install/"},"frontmatter":{"title":"✨ Linux MSSQL 2019 설치"}}},{"node":{"id":"c3897eb4-4eec-5335-aebc-0eba249747c2","fields":{"slug":"/java/create-gradle-spring/"},"frontmatter":{"title":"🔨 Gradle으로 Spring 프로젝트 생성하기 "}}},{"node":{"id":"e8945362-e46d-50b9-a3d9-018e2257a205","fields":{"slug":"/devops/mysql-utf8/"},"frontmatter":{"title":"🐛 MySQL에서 한글 깨짐"}}},{"node":{"id":"63d58e22-07c7-598c-a4b3-848b4f1bfc70","fields":{"slug":"/devops/linux-apache-tomcat/"},"frontmatter":{"title":"✍️ Linux Apache2 + Tomcat9 연동 설치"}}},{"node":{"id":"67ec4e10-d785-5af1-9e59-c8ba386a6e5a","fields":{"slug":"/java/spring-json/"},"frontmatter":{"title":"💠 Spring에서 JSON사용하기"}}},{"node":{"id":"768321d9-ca06-5946-ad0e-61289f580192","fields":{"slug":"/react/react-type/"},"frontmatter":{"title":"🤔 React의 종류"}}},{"node":{"id":"5f8ee066-3b5e-559b-a8b9-9f8529f00469","fields":{"slug":"/js/array-prototype/"},"frontmatter":{"title":"✍️ JavaScript의 Array.Prototype"}}},{"node":{"id":"d6135bc8-38eb-5e7e-9664-bfda912458d5","fields":{"slug":"/js/iterator-generator/"},"frontmatter":{"title":"🧠️ 이터레이터와 제너레이터"}}},{"node":{"id":"087dc647-ac48-569d-a0c1-46e278232d03","fields":{"slug":"/js/first-class-function/"},"frontmatter":{"title":"⭐️ 일급함수란 무엇인가?"}}},{"node":{"id":"0311e506-5512-5221-9967-d27b73b5909c","fields":{"slug":"/etc/vscode-vim/"},"frontmatter":{"title":"🕵️ VSCode에서 vim 설치 및 IM 세팅하기"}}},{"node":{"id":"1f48caee-ad1d-57d2-a64a-88a7f859f5c1","fields":{"slug":"/js/async-promise/"},"frontmatter":{"title":"💥 비동기를 값으로 다루는 Promise"}}},{"node":{"id":"5c9e1bdb-c04a-5af2-8265-3a22a86e9467","fields":{"slug":"/etc/nodemon-config/"},"frontmatter":{"title":"🙈 Nodemon 모니터링 파일 설정하기"}}},{"node":{"id":"32fc4c7d-620e-5ef2-898d-7b0bf001e3a7","fields":{"slug":"/etc/create-hexo-blog/"},"frontmatter":{"title":"🔨 Hexo를 이용하여 깃허브 블로그 만들기"}}},{"node":{"id":"20cbd59a-310c-5be9-8a11-ddcfd5200b8d","fields":{"slug":"/algorithm/transpose/"},"frontmatter":{"title":"🧠 이차원 배열 행과 열 바꾸기"}}},{"node":{"id":"4ff6b13a-1797-55a6-9ef8-52a0d93a9bfa","fields":{"slug":"/algorithm/euclidean/"},"frontmatter":{"title":"🧠 유클리드 호제법"}}},{"node":{"id":"e5fd4d94-96c5-5391-90d6-4c36e6a64f45","fields":{"slug":"/algorithm/baekjoon-init/"},"frontmatter":{"title":"🙈 백준 문제풀이 세팅 (Node.js)"}}},{"node":{"id":"05740fad-9c04-54be-91d1-36086c252a90","fields":{"slug":"/etc/mac-hammerspoon/"},"frontmatter":{"title":"👌 macOS 한영 전환 단축키 변경하기 (M1)"}}},{"node":{"id":"ba4d1746-3dc8-52e4-aba1-ffdf3e02016b","fields":{"slug":"/web/http-status-code/"},"frontmatter":{"title":"🌐️ HTTP의 상태코드의 종류와 의미"}}},{"node":{"id":"0ed1aa55-3ff8-575b-83f9-adae90caae76","fields":{"slug":"/web/good-api-uri/"},"frontmatter":{"title":"🔥️ 좋은 API URI 설계하기"}}}]},"previous":{"fields":{"slug":"/etc/mac-hammerspoon/"},"frontmatter":{"title":"👌 macOS 한영 전환 단축키 변경하기 (M1)"}},"next":{"fields":{"slug":"/web/good-api-uri/"},"frontmatter":{"title":"🔥️ 좋은 API URI 설계하기"}}},"pageContext":{"id":"ba4d1746-3dc8-52e4-aba1-ffdf3e02016b","series":null,"previousPostId":"05740fad-9c04-54be-91d1-36086c252a90","nextPostId":"0ed1aa55-3ff8-575b-83f9-adae90caae76"}},"staticQueryHashes":[]}