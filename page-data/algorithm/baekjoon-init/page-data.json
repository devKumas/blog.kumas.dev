{"componentChunkName":"component---src-templates-post-jsx","path":"/algorithm/baekjoon-init/","result":{"data":{"site":{"siteMetadata":{"title":"kumas.blog"}},"markdownRemark":{"id":"822bdf50-8874-5357-8717-336d5bc8af55","excerpt":"개요 프로그래머스와 LeetCode와는 다르게 백준에서의 알고리즘 문제 풀이는 입력까지 모두 사용자가 구현해야 합니다. JavaScript로 문제를 풀이할 것이기 때문에 Node 세팅을 해보겠습니다. 설치 아래의 형식과 같이 프로젝트를 생성해 줍니다. 백준은 dev의 stdin파일에 입력 파일이 존재합니다. 해당 파일을 읽어와 코드를 실행할 수 있도록 해…","html":"<h2>개요</h2>\n<p>프로그래머스와 LeetCode와는 다르게 백준에서의 알고리즘 문제 풀이는 입력까지 모두 사용자가 구현해야 합니다. JavaScript로 문제를 풀이할 것이기 때문에 Node 세팅을 해보겠습니다.</p>\n<h2>설치</h2>\n<p>아래의 형식과 같이 프로젝트를 생성해 줍니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">├── dev\n│   └── stdin\n└── index.js</code></pre></div>\n<p>백준은 dev의 stdin파일에 입력 파일이 존재합니다. 해당 파일을 읽어와 코드를 실행할 수 있도록 해보겠습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token comment\">// index.js</span>\n<span class=\"token keyword\">let</span> fs <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"fs\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> input <span class=\"token operator\">=</span> fs<span class=\"token punctuation\">.</span><span class=\"token function\">readFileSync</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"./dev/stdin\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">trim</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">\" \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">let</span> a <span class=\"token operator\">=</span> <span class=\"token function\">parseInt</span><span class=\"token punctuation\">(</span>intput<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> b <span class=\"token operator\">=</span> <span class=\"token function\">parseInt</span><span class=\"token punctuation\">(</span>intput<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>a <span class=\"token operator\">+</span> b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>fs모듈을 이용하여 파일을 읽어와 string 타입으로 변환하여 split을 이용하여 분리하는 방식입니다. 여러 줄을 입력을 받는다면 split('\\n')을 이용하여 입력을 받을 수도 있습니다. 또한 구조 분해 할당을 이용한다면 아래와 같이도 사용할 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token comment\">// index.js</span>\n<span class=\"token keyword\">let</span> <span class=\"token punctuation\">[</span>n<span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span>arr<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"fs\"</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">readFileSync</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"./dev/stdin\"</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">trim</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 첫번째 입력 항목의 갯수, 두번째 입력항목인 경우</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 첫번째 행의 값</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 나머지 행의 값의 배열</span></code></pre></div>\n<h2>참고</h2>\n<ul>\n<li><a href=\"https://www.acmicpc.net/\">Baekjoon Online Judge</a></li>\n</ul>","frontmatter":{"title":"🙈 백준 문제풀이 세팅 (Node.js)","date":"November 28, 2021","update":null,"tags":["algorithm","node"],"series":null},"fields":{"slug":"/algorithm/baekjoon-init/","readingTime":{"minutes":1.59}}},"seriesList":{"edges":[{"node":{"id":"af860d50-0eea-5340-8c23-5fe24a21c0a2","fields":{"slug":"/devops/tomcat-utf8/"},"frontmatter":{"title":"🐛 Windows Tomcat 배치파일 한글 깨짐"}}},{"node":{"id":"df596d5b-a9fd-512a-a4d4-9f709c4771b8","fields":{"slug":"/devops/linux-mysql57-install/"},"frontmatter":{"title":"✨ Linux MySQL 5.7 설치"}}},{"node":{"id":"8165195b-b56b-565f-81db-198f08d93769","fields":{"slug":"/devops/linux-mssql2019-install/"},"frontmatter":{"title":"✨ Linux MSSQL 2019 설치"}}},{"node":{"id":"3477da01-2466-5baa-b5b9-9b825bbd7423","fields":{"slug":"/java/create-gradle-spring/"},"frontmatter":{"title":"🔨 Gradle으로 Spring 프로젝트 생성하기 "}}},{"node":{"id":"4bec45f7-b013-5a45-a67b-9501379877b4","fields":{"slug":"/devops/mysql-utf8/"},"frontmatter":{"title":"🐛 MySQL에서 한글 깨짐"}}},{"node":{"id":"653cfcad-f394-544b-9af8-4e97e8562495","fields":{"slug":"/devops/linux-apache-tomcat/"},"frontmatter":{"title":"✍️ Linux Apache2 + Tomcat9 연동 설치"}}},{"node":{"id":"1cc1ecc7-50a2-53f0-b68e-31e41a90d050","fields":{"slug":"/java/spring-json/"},"frontmatter":{"title":"💠 Spring에서 JSON사용하기"}}},{"node":{"id":"97d07622-15f3-5ded-8873-4c019acbf2d6","fields":{"slug":"/react/react-type/"},"frontmatter":{"title":"🤔 React의 종류"}}},{"node":{"id":"44be48f6-137f-5e44-9195-b08bf6136ec6","fields":{"slug":"/js/array-prototype/"},"frontmatter":{"title":"✍️ JavaScript의 Array.Prototype"}}},{"node":{"id":"d693ce17-cb7a-5a26-a0b9-29ce499af342","fields":{"slug":"/js/iterator-generator/"},"frontmatter":{"title":"🧠️ 이터레이터와 제너레이터"}}},{"node":{"id":"c4279a6d-f1a9-54d4-ab15-1972d8ad3c2b","fields":{"slug":"/js/first-class-function/"},"frontmatter":{"title":"⭐️ 일급함수란 무엇인가?"}}},{"node":{"id":"a0161075-e6dd-5bd7-b4bf-1193ac48e653","fields":{"slug":"/etc/vscode-vim/"},"frontmatter":{"title":"🕵️ VSCode에서 vim 설치 및 IM 세팅하기"}}},{"node":{"id":"41101c68-041b-54d1-8df5-d2dbf85d27f8","fields":{"slug":"/js/async-promise/"},"frontmatter":{"title":"💥 비동기를 값으로 다루는 Promise"}}},{"node":{"id":"73fe6c92-d3a0-5317-90d8-1d3697814a13","fields":{"slug":"/etc/nodemon-config/"},"frontmatter":{"title":"🙈 Nodemon 모니터링 파일 설정하기"}}},{"node":{"id":"aa7514c9-8887-5224-8e64-1d08b6245685","fields":{"slug":"/etc/create-hexo-blog/"},"frontmatter":{"title":"🔨 Hexo를 이용하여 깃허브 블로그 만들기"}}},{"node":{"id":"12f4978c-dec8-578a-9803-2a3bab966ce1","fields":{"slug":"/algorithm/transpose/"},"frontmatter":{"title":"🧠 이차원 배열 행과 열 바꾸기"}}},{"node":{"id":"698c5727-9a8c-552c-96a1-5a96c654ecc6","fields":{"slug":"/algorithm/euclidean/"},"frontmatter":{"title":"🧠 유클리드 호제법"}}},{"node":{"id":"822bdf50-8874-5357-8717-336d5bc8af55","fields":{"slug":"/algorithm/baekjoon-init/"},"frontmatter":{"title":"🙈 백준 문제풀이 세팅 (Node.js)"}}},{"node":{"id":"5711924a-0baf-5460-a3a2-015f5aed7679","fields":{"slug":"/etc/mac-hammerspoon/"},"frontmatter":{"title":"👌 macOS 한영 전환 단축키 변경하기 (M1)"}}},{"node":{"id":"d0894c86-50ab-5b41-9786-8f72ae6f38a2","fields":{"slug":"/web/http-status-code/"},"frontmatter":{"title":"🌐️ HTTP의 상태코드의 종류와 의미"}}},{"node":{"id":"ec648d5e-33a0-54ee-9143-2a7940f37ddc","fields":{"slug":"/web/good-api-uri/"},"frontmatter":{"title":"🔥️ 좋은 API URI 설계하기"}}}]},"previous":{"fields":{"slug":"/algorithm/euclidean/"},"frontmatter":{"title":"🧠 유클리드 호제법"}},"next":{"fields":{"slug":"/etc/mac-hammerspoon/"},"frontmatter":{"title":"👌 macOS 한영 전환 단축키 변경하기 (M1)"}}},"pageContext":{"id":"822bdf50-8874-5357-8717-336d5bc8af55","series":null,"previousPostId":"698c5727-9a8c-552c-96a1-5a96c654ecc6","nextPostId":"5711924a-0baf-5460-a3a2-015f5aed7679"}},"staticQueryHashes":[]}