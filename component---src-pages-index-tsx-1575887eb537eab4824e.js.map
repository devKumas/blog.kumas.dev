{"version":3,"file":"component---src-pages-index-tsx-1575887eb537eab4824e.js","mappings":"yLA2CA,EAvC+C,SAAC,GAAe,IAAbA,EAAY,EAAZA,MAChD,OACEC,EAAAA,cAAAA,EAAAA,SAAAA,KACGD,EAAME,MAAMC,KACX,oBACEC,KACEC,EAFJ,EAEIA,GACAC,EAHJ,EAGIA,QACUC,EAJd,EAIIC,OAAUD,KAJd,IAKIE,YAAeC,EALnB,EAKmBA,MAAOC,EAL1B,EAK0BA,KAAMC,EALhC,EAKgCA,OAAQC,EALxC,EAKwCA,KALxC,OAQEZ,EAAAA,cAAAA,UAAAA,CACEI,GAAIA,EACJS,UAAU,iEAEVb,EAAAA,cAACc,EAAAA,KAAD,CAAMC,GAAIT,GACRN,EAAAA,cAAAA,KAAAA,CAAIa,UAAU,qBAAqBJ,GACnCT,EAAAA,cAAAA,MAAAA,CAAKa,UAAU,oCACbb,EAAAA,cAAAA,MAAAA,KACEA,EAAAA,cAAAA,OAAAA,KAAOU,GACNC,GAAUX,EAAAA,cAAAA,OAAAA,KAAAA,cAAqBW,EAArB,MAEbX,EAAAA,cAAAA,MAAAA,CAAKa,UAAU,6BACZD,GACCA,EAAKV,KAAI,SAACc,GAAD,OACPhB,EAAAA,cAAAA,OAAAA,CAAMa,UAAU,QAAhB,KAA6BG,QAIrChB,EAAAA,cAAAA,MAAAA,CAAKa,UAAU,8BAA8BR,UCnB3D,EARiD,SAAC,GAAyB,IAAfN,EAAc,EAAtBkB,KAAQlB,MAC1D,OACEC,EAAAA,cAAAA,EAAAA,SAAAA,KACEA,EAAAA,cAACkB,EAAAA,EAAD,MACAlB,EAAAA,cAACmB,EAAD,CAAUpB,MAAOA","sources":["webpack://kumas.dev/./src/components/PostList.tsx","webpack://kumas.dev/./src/pages/index.tsx"],"sourcesContent":["import { Link } from 'gatsby'\nimport React, { FunctionComponent } from 'react'\nimport { ContentProps, PostProps } from 'types'\n\nconst PostList: FunctionComponent<PostProps> = ({ posts }) => {\n  return (\n    <>\n      {posts.edges.map(\n        ({\n          node: {\n            id,\n            excerpt,\n            fields: { slug },\n            frontmatter: { title, date, update, tags },\n          },\n        }: ContentProps) => (\n          <article\n            id={id}\n            className=\"mb-8 p-4 hover:opacity-100 transition duration-500 opacity-80\"\n          >\n            <Link to={slug}>\n              <h2 className=\"text-xl font-bold\">{title}</h2>\n              <div className=\"flex text-xs text-gray-500 my-2 \">\n                <div>\n                  <span>{date}</span>\n                  {update && <span>{` (Updated: ${update})`}</span>}\n                </div>\n                <div className=\"before:content-['Â·'] mx-1\">\n                  {tags &&\n                    tags.map((tag) => (\n                      <span className=\"mr-1\">{` #${tag}`}</span>\n                    ))}\n                </div>\n              </div>\n              <div className=\"text-gray-700 line-clamp-3\">{excerpt}</div>\n            </Link>\n          </article>\n        ),\n      )}\n    </>\n  )\n}\n\nexport default PostList\n","import React, { FunctionComponent } from 'react'\nimport { graphql } from 'gatsby'\n\nimport Head from 'components/Head'\nimport PostList from 'components/PostList'\nimport { IndexProps } from 'types'\n\nconst IndexPage: FunctionComponent<IndexProps> = ({ data: { posts } }) => {\n  return (\n    <>\n      <Head />\n      <PostList posts={posts} />\n    </>\n  )\n}\nexport default IndexPage\n\nexport const indexQuery = graphql`\n  {\n    posts: allMarkdownRemark(\n      sort: { order: DESC, fields: [frontmatter___date, frontmatter___title] }\n      filter: { frontmatter: { draft: { eq: false } } }\n    ) {\n      edges {\n        node {\n          id\n          excerpt(pruneLength: 200, truncate: true)\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n            date(formatString: \"DD MMMM, YYYY\")\n            update(formatString: \"DD MMMM, YYYY\")\n            tags\n          }\n        }\n      }\n    }\n  }\n`\n"],"names":["posts","React","edges","map","node","id","excerpt","slug","fields","frontmatter","title","date","update","tags","className","Link","to","tag","data","Head","PostList"],"sourceRoot":""}