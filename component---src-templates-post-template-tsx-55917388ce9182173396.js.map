{"version":3,"file":"component---src-templates-post-template-tsx-55917388ce9182173396.js","mappings":"oJAqGA,UAhG2D,SAAC,GASrD,IAAD,IARJA,KACuBC,EAOnB,EAPFC,kBAAqBD,MAGNE,EAIb,EANFC,KACEC,aACEC,QAAWH,WAKjB,EAKIF,EAAM,GAJRM,KACEC,EAFJ,EAEIA,KAFJ,IAGIC,YAAeC,EAHnB,EAGmBA,MAAOC,EAH1B,EAG0BA,KAAMC,EAHhC,EAGgCA,OAAQC,EAHxC,EAGwCA,KAIlCC,GAAUC,EAAAA,EAAAA,aAuBhB,OArBAC,EAAAA,EAAAA,YAAU,WACR,GAAwB,OAApBF,EAAQG,QAAZ,CAEA,IAAMX,EAA6BY,SAASC,cAAc,UACpDC,EAAa,CACjBC,IAAK,gCACLC,KAAMnB,EACN,aAAc,WACdoB,MAAO,UACPC,MAAO,eACPC,YAAa,YACbC,MAAO,QAGTC,OAAOC,QAAQR,GAAYS,SAAQ,YAAmB,IAAjBC,EAAgB,KAAXC,EAAW,KACnDzB,EAAQ0B,aAAaF,EAAKC,MAG5BjB,EAAQG,QAAQgB,YAAY3B,MAC3B,IAGD4B,EAAAA,cAAAA,EAAAA,SAAAA,KACEA,EAAAA,cAACC,EAAAA,EAAD,MACAD,EAAAA,cAAAA,KAAAA,CAAIE,UAAU,sBAAsB1B,GACpCwB,EAAAA,cAAAA,MAAAA,CAAKE,UAAU,mCACbF,EAAAA,cAAAA,MAAAA,KACEA,EAAAA,cAAAA,OAAAA,KAAOvB,GACNC,GAAUsB,EAAAA,cAAAA,OAAAA,KAAAA,cAAqBtB,EAArB,MAEbsB,EAAAA,cAAAA,MAAAA,CAAKE,UAAU,6BACZvB,GACCA,EAAKwB,KAAI,SAACC,EAAKC,GAAN,OACPL,EAAAA,cAAAA,OAAAA,CAAME,UAAU,2BAA2BN,IAAKS,GAC9CL,EAAAA,cAACM,EAAAA,KAAD,CAAMC,GAAE,SAAWH,GAAnB,IAA+BA,SAKzCJ,EAAAA,cAAAA,MAAAA,CACEE,UAAU,yBACVM,wBAAyB,CAAEC,OAAQnC,KAErC0B,EAAAA,cAAAA,MAAAA,CAAKU,IAAK9B","sources":["webpack://kumas.dev/./src/templates/PostTemplate.tsx"],"sourcesContent":["import React, { FunctionComponent, createRef, useEffect } from 'react'\nimport { graphql, Link } from 'gatsby'\nimport Head from 'components/Head'\nimport { PostTemplateProps } from 'types'\n\nconst PostTemplate: FunctionComponent<PostTemplateProps> = ({\n  data: {\n    allMarkdownRemark: { edges },\n    site: {\n      siteMetadata: {\n        comment: { utterances },\n      },\n    },\n  },\n}) => {\n  const {\n    node: {\n      html,\n      frontmatter: { title, date, update, tags },\n    },\n  } = edges[0]\n\n  const element = createRef<HTMLDivElement>()\n\n  useEffect(() => {\n    if (element.current === null) return\n\n    const comment: HTMLScriptElement = document.createElement('script')\n    const attributes = {\n      src: 'https://utteranc.es/client.js',\n      repo: utterances,\n      'issue-term': 'pathname',\n      label: 'comment',\n      theme: 'github-light',\n      crossorigin: 'anonymous',\n      async: 'true',\n    }\n\n    Object.entries(attributes).forEach(([key, value]) => {\n      comment.setAttribute(key, value)\n    })\n\n    element.current.appendChild(comment)\n  }, [])\n\n  return (\n    <>\n      <Head />\n      <h1 className=\"text-3xl font-bold\">{title}</h1>\n      <div className=\"flex text-xs text-gray-500 my-5\">\n        <div>\n          <span>{date}</span>\n          {update && <span>{` (Updated: ${update})`}</span>}\n        </div>\n        <div className=\"before:content-['Â·'] mx-1\">\n          {tags &&\n            tags.map((tag, index) => (\n              <span className=\"mx-1 hover:text-gray-900\" key={index}>\n                <Link to={`/tags#${tag}`}>{`#${tag}`}</Link>\n              </span>\n            ))}\n        </div>\n      </div>\n      <div\n        className=\"markdown-content mt-12\"\n        dangerouslySetInnerHTML={{ __html: html }}\n      />\n      <div ref={element} />\n    </>\n  )\n}\n\nexport const profileQuery = graphql`\n  query ($slug: String) {\n    allMarkdownRemark(\n      sort: { order: DESC, fields: [frontmatter___date] }\n      filter: { fields: { slug: { eq: $slug } } }\n    ) {\n      edges {\n        node {\n          id\n          html\n          frontmatter {\n            title\n            date(formatString: \"MMM DD, YYYY\", locale: \"kr\")\n            update(formatString: \"MMM DD, YYYY\", locale: \"kr\")\n            tags\n          }\n        }\n      }\n    }\n    site {\n      siteMetadata {\n        comment {\n          utterances\n        }\n      }\n    }\n  }\n`\n\nexport default PostTemplate\n"],"names":["data","edges","allMarkdownRemark","utterances","site","siteMetadata","comment","node","html","frontmatter","title","date","update","tags","element","createRef","useEffect","current","document","createElement","attributes","src","repo","label","theme","crossorigin","async","Object","entries","forEach","key","value","setAttribute","appendChild","React","Head","className","map","tag","index","Link","to","dangerouslySetInnerHTML","__html","ref"],"sourceRoot":""}